// This file is auto-generated by @hey-api/openapi-ts

export type FantasyDiaryEntries = {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    created_at?: string;
    content: string;
    summary?: string;
    weather_condition?: string;
    weather_temperature?: number;
    location?: string;
    mood?: string;
    major_events?: Array<string>;
    appeared_characters?: Array<string>;
    emotional_tone?: string;
    story_tags?: Array<string>;
    previous_context?: string;
    next_context_hints?: string;
};

export type FantasyDiaryCharacters = {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    personality?: string;
    background?: string;
    appearance?: string;
    current_location?: string;
    relationships?: unknown;
    major_events?: Array<string>;
    character_traits?: Array<string>;
    current_status?: string;
    first_appeared_at?: string;
    last_updated?: string;
};

export type GetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type GetResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteFantasyDiaryEntriesData = {
    body?: never;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none';
    };
    path?: never;
    query?: {
        id?: string;
        created_at?: string;
        content?: string;
        summary?: string;
        weather_condition?: string;
        weather_temperature?: string;
        location?: string;
        mood?: string;
        major_events?: string;
        appeared_characters?: string;
        emotional_tone?: string;
        story_tags?: string;
        previous_context?: string;
        next_context_hints?: string;
    };
    url: '/fantasy_diary_entries';
};

export type DeleteFantasyDiaryEntriesResponses = {
    /**
     * No Content
     */
    204: unknown;
};

export type GetFantasyDiaryEntriesData = {
    body?: never;
    headers?: {
        /**
         * Limiting and Pagination
         */
        Range?: string;
        /**
         * Limiting and Pagination
         */
        'Range-Unit'?: string;
        /**
         * Preference
         */
        Prefer?: 'count=none';
    };
    path?: never;
    query?: {
        id?: string;
        created_at?: string;
        content?: string;
        summary?: string;
        weather_condition?: string;
        weather_temperature?: string;
        location?: string;
        mood?: string;
        major_events?: string;
        appeared_characters?: string;
        emotional_tone?: string;
        story_tags?: string;
        previous_context?: string;
        next_context_hints?: string;
        /**
         * Filtering Columns
         */
        select?: string;
        /**
         * Ordering
         */
        order?: string;
        /**
         * Limiting and Pagination
         */
        offset?: string;
        /**
         * Limiting and Pagination
         */
        limit?: string;
    };
    url: '/fantasy_diary_entries';
};

export type GetFantasyDiaryEntriesResponses = {
    /**
     * OK
     */
    200: Array<FantasyDiaryEntries>;
    /**
     * Partial Content
     */
    206: unknown;
};

export type GetFantasyDiaryEntriesResponse = GetFantasyDiaryEntriesResponses[keyof GetFantasyDiaryEntriesResponses];

export type PatchFantasyDiaryEntriesData = {
    /**
     * fantasy_diary_entries
     */
    body?: FantasyDiaryEntries;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none';
    };
    path?: never;
    query?: {
        id?: string;
        created_at?: string;
        content?: string;
        summary?: string;
        weather_condition?: string;
        weather_temperature?: string;
        location?: string;
        mood?: string;
        major_events?: string;
        appeared_characters?: string;
        emotional_tone?: string;
        story_tags?: string;
        previous_context?: string;
        next_context_hints?: string;
    };
    url: '/fantasy_diary_entries';
};

export type PatchFantasyDiaryEntriesResponses = {
    /**
     * No Content
     */
    204: unknown;
};

export type PostFantasyDiaryEntriesData = {
    /**
     * fantasy_diary_entries
     */
    body?: FantasyDiaryEntries;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none' | 'resolution=ignore-duplicates' | 'resolution=merge-duplicates';
    };
    path?: never;
    query?: {
        /**
         * Filtering Columns
         */
        select?: string;
    };
    url: '/fantasy_diary_entries';
};

export type PostFantasyDiaryEntriesResponses = {
    /**
     * Created
     */
    201: unknown;
};

export type DeleteFantasyDiaryCharactersData = {
    body?: never;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none';
    };
    path?: never;
    query?: {
        id?: string;
        name?: string;
        personality?: string;
        background?: string;
        appearance?: string;
        current_location?: string;
        relationships?: string;
        major_events?: string;
        character_traits?: string;
        current_status?: string;
        first_appeared_at?: string;
        last_updated?: string;
    };
    url: '/fantasy_diary_characters';
};

export type DeleteFantasyDiaryCharactersResponses = {
    /**
     * No Content
     */
    204: unknown;
};

export type GetFantasyDiaryCharactersData = {
    body?: never;
    headers?: {
        /**
         * Limiting and Pagination
         */
        Range?: string;
        /**
         * Limiting and Pagination
         */
        'Range-Unit'?: string;
        /**
         * Preference
         */
        Prefer?: 'count=none';
    };
    path?: never;
    query?: {
        id?: string;
        name?: string;
        personality?: string;
        background?: string;
        appearance?: string;
        current_location?: string;
        relationships?: string;
        major_events?: string;
        character_traits?: string;
        current_status?: string;
        first_appeared_at?: string;
        last_updated?: string;
        /**
         * Filtering Columns
         */
        select?: string;
        /**
         * Ordering
         */
        order?: string;
        /**
         * Limiting and Pagination
         */
        offset?: string;
        /**
         * Limiting and Pagination
         */
        limit?: string;
    };
    url: '/fantasy_diary_characters';
};

export type GetFantasyDiaryCharactersResponses = {
    /**
     * OK
     */
    200: Array<FantasyDiaryCharacters>;
    /**
     * Partial Content
     */
    206: unknown;
};

export type GetFantasyDiaryCharactersResponse = GetFantasyDiaryCharactersResponses[keyof GetFantasyDiaryCharactersResponses];

export type PatchFantasyDiaryCharactersData = {
    /**
     * fantasy_diary_characters
     */
    body?: FantasyDiaryCharacters;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none';
    };
    path?: never;
    query?: {
        id?: string;
        name?: string;
        personality?: string;
        background?: string;
        appearance?: string;
        current_location?: string;
        relationships?: string;
        major_events?: string;
        character_traits?: string;
        current_status?: string;
        first_appeared_at?: string;
        last_updated?: string;
    };
    url: '/fantasy_diary_characters';
};

export type PatchFantasyDiaryCharactersResponses = {
    /**
     * No Content
     */
    204: unknown;
};

export type PostFantasyDiaryCharactersData = {
    /**
     * fantasy_diary_characters
     */
    body?: FantasyDiaryCharacters;
    headers?: {
        /**
         * Preference
         */
        Prefer?: 'return=representation' | 'return=minimal' | 'return=none' | 'resolution=ignore-duplicates' | 'resolution=merge-duplicates';
    };
    path?: never;
    query?: {
        /**
         * Filtering Columns
         */
        select?: string;
    };
    url: '/fantasy_diary_characters';
};

export type PostFantasyDiaryCharactersResponses = {
    /**
     * Created
     */
    201: unknown;
};

export type ClientOptions = {
    baseUrl: 'https://obxjfruutnwrfyiomadx.supabase.co:443/' | (string & {});
};