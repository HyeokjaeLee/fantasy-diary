// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetData, GetResponses, DeleteFantasyDiaryEntriesData, DeleteFantasyDiaryEntriesResponses, GetFantasyDiaryEntriesData, GetFantasyDiaryEntriesResponses, PatchFantasyDiaryEntriesData, PatchFantasyDiaryEntriesResponses, PostFantasyDiaryEntriesData, PostFantasyDiaryEntriesResponses, DeleteFantasyDiaryCharactersData, DeleteFantasyDiaryCharactersResponses, GetFantasyDiaryCharactersData, GetFantasyDiaryCharactersResponses, PatchFantasyDiaryCharactersData, PatchFantasyDiaryCharactersResponses, PostFantasyDiaryCharactersData, PostFantasyDiaryCharactersResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * OpenAPI description (this document)
 */
export const get = <ThrowOnError extends boolean = false>(options?: Options<GetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetResponses, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

export const deleteFantasyDiaryEntries = <ThrowOnError extends boolean = false>(options?: Options<DeleteFantasyDiaryEntriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteFantasyDiaryEntriesResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_entries',
        ...options
    });
};

export const getFantasyDiaryEntries = <ThrowOnError extends boolean = false>(options?: Options<GetFantasyDiaryEntriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFantasyDiaryEntriesResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_entries',
        ...options
    });
};

export const patchFantasyDiaryEntries = <ThrowOnError extends boolean = false>(options?: Options<PatchFantasyDiaryEntriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).patch<PatchFantasyDiaryEntriesResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_entries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postFantasyDiaryEntries = <ThrowOnError extends boolean = false>(options?: Options<PostFantasyDiaryEntriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostFantasyDiaryEntriesResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_entries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteFantasyDiaryCharacters = <ThrowOnError extends boolean = false>(options?: Options<DeleteFantasyDiaryCharactersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteFantasyDiaryCharactersResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_characters',
        ...options
    });
};

export const getFantasyDiaryCharacters = <ThrowOnError extends boolean = false>(options?: Options<GetFantasyDiaryCharactersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFantasyDiaryCharactersResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_characters',
        ...options
    });
};

export const patchFantasyDiaryCharacters = <ThrowOnError extends boolean = false>(options?: Options<PatchFantasyDiaryCharactersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).patch<PatchFantasyDiaryCharactersResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_characters',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postFantasyDiaryCharacters = <ThrowOnError extends boolean = false>(options?: Options<PostFantasyDiaryCharactersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostFantasyDiaryCharactersResponses, unknown, ThrowOnError>({
        url: '/fantasy_diary_characters',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};